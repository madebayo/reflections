How did viewing a diff between two versions of a file help you see the bug that was introduced?
Well, it was easier to identify because everything was so visual.  I could more easily look at the comparisons, and see what exactly was different.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Having a history makes going back to look for changes much easier!

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
I think some of the pros are you're not saving too many micro-changes that are not really logical changes.  You can also more easily denote what changes you made.  As for cons, you may accidentally save too big of a commit, and you have to use your own judgement to decide when to commit.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?
Well, Git was designed for this, first off.  Secondly, when programming, there are many instances where you have to edit more than one file (i.e. files that have dependencies).  Google Docs was not created to be a tool for programmers.

How can you use the commands git log and git diff to view the history of files?
git log allows you to see a history of commits
git diff allows you to compare two commits (what changed between the two commits)

How might using version control make you more confident to make changes that could break something?
Since you can "rollback" to a previous version, you might feel more confident knowing that your changes aren't permanent...though the damage they cause may be...

Now that you have your workspace set up, what do you want to try using Git for?
I would like to write some code and commit it, lol.
